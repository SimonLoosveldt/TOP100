@page "/login"
@using TopHundred.Views.FrontendLogic
@using TopHundred.Views.Services
@using TopHundred.Models
@using TopHundred.Controllers.Services
@inject IAccountService accountService
@inject IUserService userService 
@inject IErrorService errorService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="main">
    <div class="middleContent">

        <div class="top_middleContent">
            <h2>@PageTitle</h2>
        </div>

        <div class="content">
            <span>
                <label>Firstname</label>
                <input type="text" @bind="@InputFirstName" placeholder="Firstname">
            </span>
            <span>
                <label>Lastname </label>
                <input type="text" @bind="@InputLastname" placeholder="Lastname">
            </span>

            @if (!string.IsNullOrEmpty(errorService.ErrorMessage))
            {
                LaunchPopUp("Please fill in all fields...");
            }

            <span>
                <input type="button" id="login_button" @bind="LoginButtonLabel" @onclick="LoginPressed" />
            </span>
        </div>
    </div>
</div>

@code {

    // Private
    private LoginHandler loginHandler { get; set; }

    // Properties
    public string PageTitle { get; set; } = "AANMELDEN";
    public string LoginButtonLabel { get; set; } = "LOGIN";
    public string InputFirstName { get; set; } = string.Empty;
    public string InputLastname { get; set; } = string.Empty;
    public User FirstUser { get; set; }

    // Public
    public bool InputFilledCheck()
    {
        if (string.IsNullOrEmpty(InputFirstName) || string.IsNullOrEmpty(InputLastname))
        {
            return false;
        }
        else
        {
            return true;
        }
    }
    public void Redirect()
    {
        NavigationManager.NavigateTo("/", true);
    }

    // Protected
    protected override void OnInitialized()
    {
        loginHandler = new LoginHandler();
        FirstUser = loginHandler.GetFirstUserFromDb();
    }

    // Private
    private async void LoginPressed()
    {
        if (!InputFilledCheck())
        {
            errorService.ChangeMessage("Please fill all inputfields...");
        }
        else
        {

            if (loginHandler.Validate(InputFirstName, InputLastname).Item1)
            {
                userService.Login(loginHandler.Validate(InputFirstName, InputLastname).Item2);
                //accountService.Login();
                Redirect();
            }
            else
            {
                await LaunchPopUp("Unrecognized user...");
                //errorService.ChangeMessage("Unrecognized user...");
            }
        }
    }
    private async Task LaunchPopUp(string message)
    {
        // https://blazor-university.com/javascript-interop/
        await JSRuntime.InvokeVoidAsync("alert", message);      
    }
}